# This workflow will do a clean installation of node dependencies, cache/restore them,
# run lint, build the source code and run tests across different versions of node.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: # Allows manual trigger from GitHub UI

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x, 25.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: |
        if [ -f package.json ] && grep -q "\"lint\"" package.json; then
          echo "Running ESLint..."
          npm run lint
        else
          echo "No lint script found — skipping linting."
        fi

    - name: Build project
      run: |
        if [ -f package.json ] && grep -q "\"build\"" package.json; then
          echo "Building project..."
          npm run build
        else
          echo "No build script found — skipping build step."
        fi

    - name: Run tests
      run: |
        if [ -f package.json ] && grep -q "\"test\"" package.json; then
          echo "Running tests..."
          mkdir -p test-results
          npm test -- --ci --reporter=junit --reporter-options output=./test-results/results.xml || true
        else
          echo "No test script found — skipping tests."
        fi

    - name: Upload test results
      if: success() || failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.node-version }}
        path: test-results/
